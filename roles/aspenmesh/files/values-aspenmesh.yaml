global:
  hub: quay.io/aspenmesh/releases
  controlPlaneSecurityEnabled: true
  mtls:
    enabled: true

  imagePullSecrets:
  - aspen-mesh-pull-secret

  proxy:
    accessLogFile: "/dev/stdout"

  outboundTrafficPolicy:
    mode: REGISTRY_ONLY

  tracer:
    zipkin:
      # address is the Host:Port for reporting trace data in zipkin format. If
      # not specified, will default to zipkin service (port 9411) in the same
      # namespace as the other istio components.
      address: ""

galley:
  podAntiAffinityLabelSelector:
  - key: app
    operator: In
    values: galley
    topologyKey: "kubernetes.io/hostname"

  replicaCount: 2

gateways:
  istio-ingressgateway:
    autoscaleMin: 2
    podAntiAffinityLabelSelector:
    - key: app
      operator: In
      values: istio-ingressgateway
      topologyKey: "kubernetes.io/hostname"
    sds:
      enabled: true
    ports:
    - port: 80
      targetPort: 80
      name: http2
    - port: 443
      name: https
      nodePort: 31390
  istio-egressgateway:
    enabled: false
    autoscaleMin: 2
    podAntiAffinityLabelSelector:
    - key: app
      operator: In
      values: istio-egressgateway
      topologyKey: "kubernetes.io/hostname"

mixer:
  policy:
    autoscaleMin: 2
  telemetry:
    autoscaleMin: 2
  podAntiAffinityLabelSelector:
  - key: chart
    operator: In
    values: mixer
    topologyKey: "kubernetes.io/hostname"

pilot:
  # Aspen Mesh has decided to disable this experimental feature until
  # both outbound and inbound protocol sniffing is merged and is
  # stable
  enableProtocolSniffingForOutbound: false
  autoscaleMin: 2
  podAntiAffinityLabelSelector:
  - key: app
    operator: In
    values: pilot
    topologyKey: "kubernetes.io/hostname"

sidecarInjectorWebhook:
  replicaCount: 2
  podAntiAffinityLabelSelector:
  - key: app
    operator: In
    values: sidecarInjectorWebhook
    topologyKey: "kubernetes.io/hostname"
    
security:
  replicaCount: 2
  podAntiAffinityLabelSelector:
  - key: app
    operator: In
    values: security
    topologyKey: "kubernetes.io/hostname"

aspen-mesh-controlplane:
  enabled: true
  image: controlplane-1.4.6-am2
  modelruntimeImage: modelruntime-1.4.6-am2

  imagePullSecrets:
  - aspenmesh-kubernetes-pull-secret

  replicaCount: 2

  clusterId: udf-demo

  userAuth:
    type: none
    jwt:
      # jwks must provide a valid JWKs endpoint.
      jwks:
      # redirectUrl must provide an unauthenticated redirect URL.
      redirectUrl:
      # claims can be added here to require claims be present in the JWT
      # (e.g.: `claims: aud=aspenmesh:io,role=k8s:admin`).

  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  modelRuntimeResources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "100m"

aspen-mesh-dashboard:
  enabled: true
  image: dashboard-1.4.6-am2
  replicaCount: 2

aspen-mesh-secure-ingress:
  enabled: true
  image: secure-ingress-1.4.6-am2
  # Email to use for Let's Encrypt registration (used for certificate expiry notices)
  # Leave blank ("") if you wish to manage your own TLS certificates.
  lets-encrypt-email: ""
  resources: {}
  externalDnsAnnotation: "policy.aspenmesh.io/externaldns"
  externalDnsEnabled: false

aspen-mesh-metrics-collector:
  enabled: true
  proxyImage: metrics-collector-proxy-1.4.6-am2
  proxyResources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  serviceImage: metrics-collector-service-1.4.6-am2
  serviceResources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "512Mi"
      cpu: "500m"

traffic-claim-enforcer:
  enabled: true
  image: traffic-claim-enforcer-1.4.6-am2
  resources: {}

istio_cni:
  # To enable CNI-based installations, set this to true and follow additional
  # CNI installation instructions to install the istio-cni Helm chart
  enabled: false

prometheus:
  enabled: true

cert-manager:
  enabled: false
  image:
    controller: cert-manager-controller-1.4.6-am2
    cainjector: cert-manager-cainjector-1.4.6-am2
    webhook: cert-manager-webhook-1.4.6-am2
  fullnameOverride: aspen-mesh-cert-manager

external-dns:
  image: external-dns-1.4.6-am2
  enabled: false
  fullnameOverride: aspen-mesh-external-dns

  annotationFilter: "policy.aspenmesh.io/externaldns=true"
  policy: sync
  provider: aws
  sources: ["istio-gateway"]
  txtOwnerId: aspen-mesh-secure-ingress
